// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator erd {
  provider = "prisma-erd-generator"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String  @id @default(uuid())
  username   String  @unique
  name       String
  email      String? @unique
  avatar_url String?

  created_at DateTime @default(now())

  accounts     Account[]
  sessions     Session[]
  transactions Transaction[]

  @@map("users")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verifcation_tokens")
}

model Category {
  id          String        @id @default(uuid())
  title       String        @unique
  Transaction Transaction[]
}

model Transaction {
  id          String   @id @default(uuid())
  title       String
  price       Decimal
  type        String
  created_at  DateTime @default(now())
  user_id     String
  category_id String

  category Category @relation(fields: [category_id], references: [id])
  user     User     @relation(fields: [user_id], references: [id])
}
